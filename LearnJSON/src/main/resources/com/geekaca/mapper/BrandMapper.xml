<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geekaca.mapper.BrandMapper">

    <resultMap id="brandMap" type="Brand">
        <id property="id" column="id"/>
        <result property="brandName" column="brand_name"/>
        <result property="companyName" column="company_name"/>
        <result property="typeId" column="type_id"/>
    </resultMap>

    <insert id="insertBrand">
        insert into tb_brand(brand_name, company_name, ordered, description, status, type_id)
        values (#{brandName}, #{companyName}, #{ordered}, #{description}, #{status}, #{typeId});
    </insert>
    <update id="updateBrand">
        update tb_brand
        set brand_name   = #{brandName},
            company_name = #{companyName},
            ordered      = #{ordered},
            description  = #{description},
            status       = #{status},
            type_id      = #{typeId}
        where id = #{id};
    </update>
    <delete id="deleteBrand">
        delete
        from tb_brand
        where id = #{brandId};
    </delete>
    <select id="selectBrand" resultMap="brandMap">
        select *
        from tb_brand;
    </select>
    <select id="selectById" resultMap="brandMap">
        select *
        from tb_brand
        where id = #{id}
    </select>
    <select id="selectByName" resultMap="brandMap">
        select *
        from tb_brand
--         where (brand_name like concat('%', #{brandName}, '%'))
--            or (company_name like concat('%', #{companyName}, '%'))
--            or (status = #{status});
        <where>
            <choose>
                <when test="brandName != null and brandName != ''">
                    brand_name like concat('%', #{brandName}, '%')
                </when>
                <when test="companyName != null and companyName != ''">
                    company_name like concat('%', #{companyName}, '%')
                </when>
                <when test="status != null">
                    status = #{status}
                </when>
                <otherwise>
                    status = 1
                </otherwise>
            </choose>
        </where>
    </select>

</mapper>