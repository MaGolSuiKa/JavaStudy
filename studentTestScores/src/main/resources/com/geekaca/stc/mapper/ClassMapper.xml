<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geekaca.stc.mapper.ClassMapper">

    <resultMap id="BaseResultMap" type="com.geekaca.stc.domain.Class">
        <id property="classId" column="class_id" jdbcType="INTEGER"/>
        <result property="className" column="class_name" jdbcType="VARCHAR"/>
        <result property="classAddress" column="class_address" jdbcType="VARCHAR"/>
        <result property="classMembers" column="class_members" jdbcType="INTEGER"/>
        <result property="classMembers" column="count(*)" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        class_id
        ,class_name,class_address,
        class_members
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_class
        where class_id = #{classId,jdbcType=INTEGER}
    </select>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from tb_class
        where class_id = #{classId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="class_id" keyProperty="classId" parameterType="com.geekaca.stc.domain.Class"
            useGeneratedKeys="true">
        insert into tb_class
        ( class_id, class_name, class_address
        , class_members)
        values ( #{classId,jdbcType=INTEGER}, #{className,jdbcType=VARCHAR}, #{classAddress,jdbcType=VARCHAR}
               , #{classMembers,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" keyColumn="class_id" keyProperty="classId" parameterType="com.geekaca.stc.domain.Class"
            useGeneratedKeys="true">
        insert into tb_class
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="classId != null">class_id,</if>
            <if test="className != null">class_name,</if>
            <if test="classAddress != null">class_address,</if>
            <if test="classMembers != null">class_members,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="classId != null">#{classId,jdbcType=INTEGER},</if>
            <if test="className != null">#{className,jdbcType=VARCHAR},</if>
            <if test="classAddress != null">#{classAddress,jdbcType=VARCHAR},</if>
            <if test="classMembers != null">#{classMembers,jdbcType=INTEGER},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.geekaca.stc.domain.Class">
        update tb_class
        <set>
            <if test="className != null">
                class_name = #{className,jdbcType=VARCHAR},
            </if>
            <if test="classAddress != null">
                class_address = #{classAddress,jdbcType=VARCHAR},
            </if>
            <if test="classMembers != null">
                class_members = #{classMembers,jdbcType=INTEGER},
            </if>
        </set>
        where class_id = #{classId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.geekaca.stc.domain.Class">
        update tb_class
        set class_name    = #{className,jdbcType=VARCHAR},
            class_address = #{classAddress,jdbcType=VARCHAR},
            class_members = #{classMembers,jdbcType=INTEGER}
        where class_id = #{classId,jdbcType=INTEGER}
    </update>

    <select id="selectClassMembers" resultMap="BaseResultMap">
        select c.class_name,count(*)
        from tb_stu s,
             tb_class c
        where s.class_no = c.class_id
        group by c.class_id
    </select>
</mapper>
